AWSTemplateFormatVersion: '2010-09-09'
Description: API Gateway REST (API compartido) + Lambda para crear usuarios

Parameters:
  ProjectName:
    Type: String
    Default: events-app
  TableName:
    Type: String
    Default: UserManagementTable
  CodeS3Bucket:
    Type: String
  CodeS3Key:
    Type: String
  LambdaMemoryMB:
    Type: Number
    Default: 512
  LambdaTimeoutSec:
    Type: Number
    Default: 15
  LambdaRoleArn:
    Type: String
    Description: ARN del rol EXISTENTE para la Lambda (no se crea en este stack)
  StageName:
    Type: String
    Default: prod
  RestApiId:
    Type: String
  RootResourceId:
    Type: String

Resources:
  CreateUserLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-create-user'
      Runtime: python3.12
      Handler: app.handler
      Role: !Ref LambdaRoleArn
      MemorySize: !Ref LambdaMemoryMB
      Timeout: !Ref LambdaTimeoutSec
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
      Code:
        S3Bucket: !Ref CodeS3Bucket
        S3Key: !Ref CodeS3Key
      Architectures: [arm64]

  UserResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref RestApiId
      ParentId: !Ref RootResourceId
      PathPart: user

  UserPostMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref RestApiId
      ResourceId: !Ref UserResource
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub 'arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreateUserLambda.Arn}/invocations'

  ApiInvokePermissionUser:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref CreateUserLambda
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApiId}/*/POST/user'

Outputs:
  UserInvokeUrl:
    Description: URL del endpoint POST /user (requiere deployment a la stage)
    Value: !Sub 'https://${RestApiId}.execute-api.${AWS::Region}.amazonaws.com/${StageName}/user'
  LambdaName:
    Value: !Ref CreateUserLambda
